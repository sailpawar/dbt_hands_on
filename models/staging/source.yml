# generic source freshness and other tests is included here
version: 2

sources:
  - name: sail
    description: dbt connects to 'sail' schema in 'dbt_workshop_badge2' db to get data from table 'raw_sales_data'
    database: dbt_workshop_badge2
    schema: sail
    tables:
      - name: raw_sales_data
        description: data lands in this table in snowflake through snowpipe and s3 integration
        columns: 
          - name: UNIQUE_FOR_EACH_ROW
            description: unique sequence for each row 
            tests:
              - unique
              - not_null
          - name: TRACK_ID
            description: to track changes to existing row using (profit_center,transaction_month,year,sales_person,customer)
            tests:
              - not_null
          - name: YEAR
            description: year in which sale was made
            tests:
              - not_null
          - name: TRANSACTION_MONTH
            description: month in which transaction was made
            tests:
              - not_null
          - name: SALES_TARGET
            description: sales target for sales person for that month
            tests:
              - not_null
          - name: SALES_PERSON
            description: sales person who made the sale
            tests:
              - not_null
          - name: PROFIT_CENTER_MANAGER
            description: every profit center must have a manager
            tests:
              - not_null
          - name: PROFIT_CENTER
            description: profit center at which sale was made
            tests:
              - not_null
          - name: CUSTOMER
            description: customer to which sale was made
            tests:
              - not_null
          - name: ACTUAL_SALES
            description: amount of sale for perticular customer in perticular month-year by perticular sales person
            tests:
              - not_null
        loaded_at_field: cast(loaded_in_sf_at as timestamp)
        freshness:
          warn_after: {count: 1, period: day}
          # error_after: {count: 24, period: hour}










